---
groups:
  - name: bosh-alicloud-cpi-go
    jobs:
      - test-unit
      - build-candidate
      - integration
      - bats
      - end-2-end
#      - delivery
      - promote-candidate
#      - build-environment
      - test-environment
      - test-environment2

shared:
  - &prepare-director
    task: prepare-director
    file: pipelines/shared/tasks/prepare-director.yml
    params: &prepare-director-params
      INFRASTRUCTURE:             alicloud
      ACCESS_KEY_ID:              {{alicloud_access_key__primary}}
      SECRET_KEY_ID:              {{alicloud_secret_key__primary}}
      DIRECTOR_VARS_FILE:         {{alicloud_director_vars_file}}
      CPI_INTERNAL_IP:            {{alicloud__cpi_internal_ip}}
      CPI_INTERNAL_GW:            {{alicloud__cpi_internal_gw}}

  - &deploy-director
    task: deploy-director
    file: pipelines/shared/tasks/deploy-director.yml

  - &run-bats
    task: run-bats
    file: pipelines/shared/tasks/run-bats.yml
    params:
      INFRASTRUCTURE:     alicloud
      STEMCELL_NAME:      bosh-alicloud-kvm-ubuntu-trusty-go_agent
      BAT_INFRASTRUCTURE: alicloud
      BAT_NETWORKING:     manual
      BAT_RSPEC_FLAGS:    "--tag ~multiple_manual_networks --tag ~root_partition"

  - &run-end-2-end
    task: run-e2e
    file: bosh-cpi-src/ci/tasks/run-e2e.yml

  - &create-environment
    put: environment
    params:
      delete_on_failure: true
      generate_random_name: true
      terraform_source: bosh-cpi-src/ci/assets/terraform

  - &build-environment
    task: build-environment
    file: bosh-cpi-src/ci/tasks/build-environment.yml
    params:
      ALICLOUD_ACCESS_KEY_ID:     {{alicloud_access_key__primary}}
      ALICLOUD_SECRET_ACCESS_KEY: {{alicloud_secret_key__primary}}
      ALICLOUD_DEFAULT_REGION:    {{alicloud_region__primary}}
      DESTROY_ENVIRONMENT:        false
      GIT_USER_EMAIL:             {{github_user_email}}
      GIT_USER_NAME:              {{github_user_name}}
      GIT_USER_ID:                {{github_user_id}}
      GIT_USER_PASSWORD:          {{github_user_password}}
      BOSH_REPO_HOST:             https://github.com/alibaba/bosh-alicloud-cpi-release.git
      BOSH_REPO_BRANCH:           concourse_ci_tmp

  - &destroy-environment
      task: destroy-environment
      file: bosh-cpi-src/ci/tasks/destroy-environment.yml
      params:
        ALICLOUD_ACCESS_KEY_ID:     {{alicloud_access_key__primary}}
        ALICLOUD_SECRET_ACCESS_KEY: {{alicloud_secret_key__primary}}
        ALICLOUD_DEFAULT_REGION:    {{alicloud_region__primary}}
        DESTROY_ENVIRONMENT:        true
        GIT_USER_EMAIL:             {{github_user_email}}
        GIT_USER_NAME:              {{github_user_name}}
        GIT_USER_ID:                {{github_user_id}}
        GIT_USER_PASSWORD:          {{github_user_password}}
        BOSH_REPO_HOST:             https://github.com/alibaba/bosh-alicloud-cpi-release.git
        BOSH_REPO_BRANCH:           concourse_ci_tmp

  - &ensure-terminated
    task: ensure-terminated
    file: bosh-cpi-src/ci/tasks/ensure-terminated.yml
    params:
      ALICLOUD_ACCESS_KEY_ID:     {{alicloud_access_key__primary}}
      ALICLOUD_ACCESS_KEY_SECRET: {{alicloud_secret_key__primary}}
      ALICLOUD_DEFAULT_REGION:    {{alicloud_region__primary}}

  - &teardown
    task: teardown
    file: pipelines/shared/tasks/teardown.yml

jobs:
  - name: test-unit
    plan:
      - aggregate:
        - {trigger: false, get: bosh-cpi-src, resource: bosh-cpi-src-in}

      - task: unit-tests
        file: bosh-cpi-src/ci/tasks/unit-tests.yml
        params:
          ALICLOUD_ACCESS_KEY_ID:     {{alicloud_access_key__primary}}
          ALICLOUD_ACCESS_KEY_SECRET: {{alicloud_secret_key__primary}}
          ALICLOUD_DEFAULT_REGION:    {{alicloud_region__primary}}

  - name: test-environment
    serial: true
    plan:
      - aggregate:
        - {trigger: false, get: bosh-cpi-src, resource: bosh-cpi-src-in}
      - <<: *destroy-environment
      - put: terraform-metadata
        params: {repository: terraform-metadata, rebase: true, force: true, tag: env-v1}
      - <<: *build-environment
      - put: terraform-metadata
        params: {repository: terraform-metadata, rebase: true, force: true, tag: env-v1}
      - <<: *destroy-environment
      - put: terraform-metadata
        params: {repository: terraform-metadata, rebase: true, force: true, tag: env-v1}

  - name: test-environment2
    serial: true
    plan:
      - aggregate:
        - {trigger: false, get: bosh-cpi-src, resource: bosh-cpi-src-in}
      - <<: *destroy-environment
      - put: terraform-metadata
        params: {repository: terraform-metadata, rebase: true, force: true, tag: env-v2}
      - <<: *build-environment
      - put: terraform-metadata
        params: {repository: terraform-metadata, rebase: true, force: true, tag: env-v2}
      - <<: *destroy-environment
      - put: terraform-metadata
        params: {repository: terraform-metadata, rebase: true, force: true, tag: env-v2}

  - name: build-candidate
    serial: true
    plan:
      - aggregate:
        - {trigger: true, passed: [test-unit], get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: false, get: bosh-cpi-dev-artifacts}
        - {trigger: false, get: go-cpi-blobs}
        - {trigger: false, get: version-semver, params: {bump: patch}}
      - put: version-semver
        params: {file: version-semver/number}
      - task: build
        file: bosh-cpi-src/ci/tasks/build-candidate.yml
        params:
          GIT_USER_EMAIL:     {{github_user_email}}
          GIT_USER_NAME: {{github_user_name}}
      - put: bosh-cpi-dev-artifacts
        params: {repository: candidate/repo, rebase: true, force: true}

  - name: integration
    serial: true
    plan:
      - aggregate:
        - {trigger: true,  passed: [build-candidate], get: bosh-cpi-release, resource: bosh-cpi-dev-artifacts}
        - {trigger: false, passed: [build-candidate], get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: false,  get: stemcell, resource: heavy-ubuntu-stemcell}
        - {get: 2h,             trigger: true}
      - <<: *destroy-environment
      - put: terraform-metadata
        params: {repository: terraform-metadata, rebase: true, force: true}
      - <<: *build-environment
      - put: terraform-metadata
        params: {repository: terraform-metadata, rebase: true, force: true}
      - task: test
        file: bosh-cpi-src/ci/tasks/run-integration.yml
        params:
          ALICLOUD_ACCESS_KEY_ID:     {{alicloud_access_key__primary}}
          ALICLOUD_ACCESS_KEY_SECRET: {{alicloud_secret_key__primary}}
          CPI_STEMCELL_ID:            {{alicloud__cpi_stemcell_id}}
          CPI_INTERNAL_IP:            {{alicloud__cpi_internal_ip}}
          CPI_INTERNAL_GW:            {{alicloud__cpi_internal_gw}}
        ensure:
          do:
            - <<: *destroy-environment
            - put: terraform-metadata
              params: {repository: terraform-metadata, rebase: true, force: true}

  - name: bats
    serial: true
    plan:
      - aggregate:
        - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [integration]}
        - {get: bosh-release,    trigger: false, resource: precompiled-bosh-release}
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in, passed: [integration]}
        - {get: stemcell,        trigger: false, resource: precompiled-stemcell}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: bats,            trigger: false}
        - {get: 2h,              trigger: true}
      - do:
        - <<: *destroy-environment
        - put: terraform-metadata
          params: {repository: terraform-metadata, rebase: true, force: true}
        - <<: *build-environment
        - put: terraform-metadata
          params: {repository: terraform-metadata, rebase: true, force: true}
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE:  |
              -o pipelines/shared/assets/ops/remove-hm.yml
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
        - do:
            - <<: *deploy-director
            - <<: *run-bats
          ensure:
            do:
              - <<: *teardown
#              - <<: *ensure-terminated
        ensure:
          do:
            - <<: *destroy-environment
            - put: terraform-metadata
              params: {repository: terraform-metadata, rebase: true, force: true}

  - name: end-2-end
    serial: true
    plan:
      - aggregate:
        - {get: cpi-release,     trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [bats]}
        - {get: bosh-release,    trigger: false, resource: precompiled-bosh-release}
        - {get: bosh-cpi-src,    trigger: false, resource: bosh-cpi-src-in, passed: [bats]}
        - {get: stemcell,        trigger: false, resource: precompiled-stemcell}
        - {get: heavy-stemcell,  trigger: false, resource: heavy-ubuntu-stemcell}
        - {get: bosh-deployment, trigger: false}
        - {get: pipelines,       trigger: false}
        - {get: bosh-cli,        trigger: false}
        - {get: 2h,              trigger: true}
      - <<: *destroy-environment
      - put: terraform-metadata
        params: {repository: terraform-metadata, rebase: true, force: true}
      - <<: *build-environment
      - put: terraform-metadata
        params: {repository: terraform-metadata, rebase: true, force: true}
      - do:
        - <<: *prepare-director
          params:
            <<: *prepare-director-params
            OPTIONAL_OPS_FILE:  |
              -o bosh-deployment/external-ip-with-registry-not-recommended.yml
              -o pipelines/shared/assets/ops/remove-provider-cert.yml
#              -o pipelines/alicloud/assets/ops/ram-instance-profile-ops-file.yml
        - do:
            - <<: *deploy-director
            - <<: *run-end-2-end
#          ensure:
#            do:
#              - <<: *teardown
#              - <<: *ensure-terminated
#        ensure:
#          do:
#            - <<: *destroy-environment

#  - name: delivery
#    plan:
#      - aggregate:
#        - {get: bosh-cpi-release,  trigger: true,  resource: bosh-cpi-dev-artifacts, passed: [end-2-end, bats, integration]}
#        - {get: bosh-cpi-src, trigger: false, resource: bosh-cpi-src-in, passed: [end-2-end, bats, integration]}
#      - put: tracker-output
#        params:
#          repos:
#          - bosh-cpi-src

  - name: promote-candidate
    plan:
      - aggregate:
        - {get: bosh-cpi-release,  trigger: false, resource: bosh-cpi-dev-artifacts, passed: [end-2-end, bats, integration]}
        - {get: bosh-cpi-src, trigger: false, resource: bosh-cpi-src-in, passed: [end-2-end, bats, integration]}
        - {trigger: false, get: release-version-semver, params: {bump: major}}
      - task: promote
        file: bosh-cpi-src/ci/tasks/promote-candidate.yml
        params:
          ALICLOUD_ACCESS_KEY_ID:     {{alicloud_access_key__primary}}
          ALICLOUD_ACCESS_KEY_SECRET: {{alicloud_secret_key__primary}}
      - put: bosh-cpi-src-out
        params: {repository: promoted/repo, rebase: true, force: true}
      - put: release-version-semver
        params: {file: release-version-semver/number}


resource_types:
  - name: terraform_type
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource

resources:
  - name: 2h
    type: time
    source: {interval: 24h}
  - name: bosh-cpi-dev-artifacts
    type: git
    source:
      uri: git@gitlab.com:demonwy/bosh-alicloud-cpi-release.git
      branch: cpi_dev_artifacts_tmp
      private_key: {{gitlab_bosh-alicloud-cpi-release_private-key}}
  - name: bosh-cpi-src-in
    type: git
    source:
      uri: git@github.com:xiaozhu36/bosh-alicloud-cpi-release.git
      branch: concourse_ci_tmp
#      uri: git@github.com:alibaba/bosh-alicloud-cpi-release.git
#      branch: concourse_ci_tmp
      ignore_paths:
        - .final_builds/**/*.yml
        - releases/**/*.yml
      private_key: {{gitlab_bosh-alicloud-cpi-release_private-key}}
  - name: go-cpi-blobs
    type: git
    source:
      uri: https://github.com/demonwy/go_alicloud_cpi_blobs.git
      branch: master
  - name: bosh-cpi-src-out
    type: git
    source:
      uri: git@github.com:alibaba/bosh-alicloud-cpi-release.git
      branch: promote_release_artifacts
      private_key: {{gitlab_bosh-alicloud-cpi-release_private-key}}
  - name: version-semver
    type: semver
    source:
      driver: git
      uri: git@github.com:demonwy/test-semver-version.git
      branch: master
      file: version
      private_key: {{gitlab_bosh-alicloud-cpi-release_private-key}}
  - name: release-version-semver
    type: semver
    source:
      driver: git
      uri: git@github.com:demonwy/test-semver-version.git
      branch: release
      file: version
      private_key: {{gitlab_bosh-alicloud-cpi-release_private-key}}
  - name: bosh-cli
    type: git
    source:
      uri: https://github.com/demonwy/bosh-cli.git
      branch: linux
  - name: pipelines
    type: git
    source:
      uri: git@github.com:alibaba/bosh-cpi-certification.git
      branch: ali-cpi-certify
      private_key: {{gitlab_bosh-alicloud-cpi-release_private-key}}
  # Remember to update these every once in a while
  - name: precompiled-bosh-release
    type: github-release
    source:
      owner: demonwy
      repository: bosh-release
      tag: 262.3
  - name: precompiled-stemcell
    type: git
    source:
      uri: https://github.com/demonwy/light-bosh-stemcell.git
      branch: ubuntu
  - name: heavy-ubuntu-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-trusty-go_agent
      force_regular: true
      tarball: true
  - name: bats
    type: git
    source:
      uri: https://github.com/demonwy/bosh-acceptance-tests.git
      branch: alicloud

  - name: bosh-deployment
    type: git
    source:
      uri: git@github.com:demonwy/bosh-deployment.git
      branch: support_alicloud
#      uri: git@github.com:aliyun/bosh-deployment.git
#      branch: alicloud
      private_key: {{gitlab_bosh-alicloud-cpi-release_private-key}}

  - name: terraform-metadata
    type: git
    source:
      uri: git@github.com:xiaozhu36/bosh-alicloud-cpi-release.git
      branch: concourse_ci_tmp
      private_key: {{gitlab_bosh-alicloud-cpi-release_private-key-xz}}

